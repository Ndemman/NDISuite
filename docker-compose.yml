version: '3.8'

services:
  # PostgreSQL database
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ndisuite
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for caching and Celery
  redis:
    image: redis:6
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Django backend
  backend:
    build: ./backend
    volumes:
      - ./backend:/app
      - ./media:/app/media
      - ./static:/app/static
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DEBUG=1
      - DJANGO_SECRET_KEY=dev_secret_key
      - POSTGRES_DB=ndisuite
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  # Celery worker
  celery:
    build: ./backend
    volumes:
      - ./backend:/app
    depends_on:
      - backend
      - redis
    environment:
      - DEBUG=1
      - DJANGO_SECRET_KEY=dev_secret_key
      - POSTGRES_DB=ndisuite
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    command: celery -A ndisuite worker -l INFO

  # Celery beat for scheduled tasks
  celery-beat:
    build: ./backend
    volumes:
      - ./backend:/app
    depends_on:
      - backend
      - redis
    environment:
      - DEBUG=1
      - DJANGO_SECRET_KEY=dev_secret_key
      - POSTGRES_DB=ndisuite
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    command: celery -A ndisuite beat -l INFO

  # Next.js frontend
  frontend:
    build: ./frontend
    # No bind mounts; use built image
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
      - NEXT_PUBLIC_WS_HOST=localhost:8000
    depends_on:
      - backend

volumes:
  postgres_data:
