services:
  # MongoDB for document storage
  mongo:
    image: mongo:7
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and Celery
  redis:
    image: redis:6
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Django backend
  backend:
    build: ./backend
    volumes:
      - ./backend:/app
      - ./media:/app/media
      - ./static:/app/static
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8000/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      - DEBUG=1
      - DJANGO_SECRET_KEY=dev_secret_key
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DJANGO_SETTINGS_MODULE=ndisuite.settings
    command: >
      sh -c "python manage.py migrate &&
             gunicorn --bind 0.0.0.0:8000 ndisuite.wsgi:application"

  # Celery worker
  celery:
    build: ./backend
    volumes:
      - ./backend:/app
      - ./media:/app/media  # Add media volume for file processing
    depends_on:
      backend:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongo:
        condition: service_healthy
    environment:
      - DEBUG=1
      - DJANGO_SECRET_KEY=dev_secret_key
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DJANGO_SETTINGS_MODULE=ndisuite.settings
      - MONGODB_URI=mongodb://mongo:27017
      - MONGODB_DB=ndisuite
    command: celery -A ndisuite worker -l INFO

  # Celery beat for scheduled tasks
  celery-beat:
    build: ./backend
    volumes:
      - ./backend:/app
      - ./media:/app/media  # Add media volume for file processing
    depends_on:
      backend:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongo:
        condition: service_healthy
    environment:
      - DEBUG=1
      - DJANGO_SECRET_KEY=dev_secret_key
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DJANGO_SETTINGS_MODULE=ndisuite.settings
      - MONGODB_URI=mongodb://mongo:27017
      - MONGODB_DB=ndisuite
    command: celery -A ndisuite beat -l INFO

  # Next.js frontend
  frontend:
    build:
      context: ./frontend
      target: deps  # use stage with node_modules installed for dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000/api/v1
      - API_URL=http://backend:8000/api/v1
      - NEXT_PUBLIC_WS_HOST=backend:8000
    depends_on:
      - backend
    command: sh -c "npm install && npm run dev"

volumes:
  mongo_data: {}
